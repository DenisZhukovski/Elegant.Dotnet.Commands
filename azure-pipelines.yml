# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
  branches:
    include:
    - main
    - release/*
  paths:
    exclude:
    - README.md
    - docs/*

pool:
  vmImage: 'windows-latest'

variables:
- group: General
- name: solution
  value: '**/*.sln'
- name: buildPlatform
  value: 'Any CPU'
- name: buildConfiguration
  value: 'Release'
- name:  outputDirectory
  value: '$(build.binariesDirectory)/$(buildConfiguration)'
- name: isDevelop
  value: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
- name: releaseBuildNumber
  value: '1.1'
- name: PatchNumber
  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:
    value: $[format('.{0}', counter(variables['releaseBuildNumber'], 0))]
  ${{ else }}:
    value: '-preview'
- name: NugetPackageVersion
  value: $[format('{0}{1}', variables['releaseBuildNumber'], variables['PatchNumber'])]

steps:
- task: UseDotNet@2
  displayName: Use .NET 9.0
  inputs:
    packageType: 'sdk'
    version: '9.0.x'

- task: NuGetToolInstaller@1
- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'
- task: SonarCloudPrepare@2
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'deniszhukovski'
    scannerMode: 'MSBuild'
    projectKey: 'DenisZhukovski_Dotnet.Commands'
    projectName: 'Dotnet.Commands'
    extraProperties: |
        sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/coverage.opencover.xml
        sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/*.trx
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:Version=$(NugetPackageVersion)'

- task: DotNetCoreCLI@2
  displayName: 'Run tests'
  inputs:
    command: 'test'
    projects: '**/*[Tt]est*/*.csproj'
    publishTestResults: true
    arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true "/p:CoverletOutputFormat=\"opencover,Cobertura\""'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage result'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '**/*.cobertura.xml'

- task: SonarCloudAnalyze@2
- task: SonarCloudPublish@2
  inputs:
    pollingTimeoutSec: '300'

- task: MSBuild@1
  displayName: 'NuGet pack Elegant.Commands'
  inputs:
    solution: '$(solution)'
    configuration: '$(buildConfiguration)'
    msbuildArguments: '/p:PackageVersion=$(NugetPackageVersion) /t:pack /p:packageOutputPath=$(Build.ArtifactStagingDirectory) /p:IncludeReferencedProjects=true /p:PackageReleaseNotes="$(releaseNotes)"'

- task: NuGetCommand@2
  displayName: 'NuGet push'
  condition: and(succeeded(), eq(variables.isDevelop, true))
  inputs:
    command: push
    nuGetFeedType: external
    publishFeedCredentials: 'Elegant_Commands'
